<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Awaiting Dozer Day" xml:space="preserve">
    <value>Awaiting Dozer Day</value>
  </data>
  <data name="Awaiting Dozer Night" xml:space="preserve">
    <value>Awaiting Dozer Night</value>
  </data>
  <data name="Awaiting Drill Crew Day" xml:space="preserve">
    <value>Awaiting Drill Crew Day</value>
  </data>
  <data name="Awaiting Drill Crew Night" xml:space="preserve">
    <value>Awaiting Drill Crew Night</value>
  </data>
  <data name="Awaiting Mechanic Electrician Day" xml:space="preserve">
    <value>Awaiting Mechanic Electrician Day</value>
  </data>
  <data name="Awaiting Mechanic Electrician Night" xml:space="preserve">
    <value>Awaiting Mechanic Electrician Night</value>
  </data>
  <data name="Awaiting Parts Materials Day" xml:space="preserve">
    <value>Awaiting Parts Materials Day</value>
  </data>
  <data name="Awaiting Parts Materials Night" xml:space="preserve">
    <value>Awaiting Parts Materials Night</value>
  </data>
  <data name="Bit Change Day" xml:space="preserve">
    <value>Bit Change Day</value>
  </data>
  <data name="Bit Change Night" xml:space="preserve">
    <value>Bit Change Night</value>
  </data>
  <data name="BITS DAY" xml:space="preserve">
    <value>BITS DAY</value>
  </data>
  <data name="BITS NIGHT" xml:space="preserve">
    <value>BITS NIGHT</value>
  </data>
  <data name="Blast Day" xml:space="preserve">
    <value>Blast Day</value>
  </data>
  <data name="Blast Night" xml:space="preserve">
    <value>Blast Night</value>
  </data>
  <data name="CASING FROM DAY" xml:space="preserve">
    <value>CASING FROM DAY</value>
  </data>
  <data name="CASING FROM NIGHT" xml:space="preserve">
    <value>CASING FROM NIGHT</value>
  </data>
  <data name="CASING TO DAY" xml:space="preserve">
    <value>CASING TO DAY</value>
  </data>
  <data name="CASING TO NIGHT" xml:space="preserve">
    <value>CASING TO NIGHT</value>
  </data>
  <data name="Condition Day" xml:space="preserve">
    <value>Condition Day</value>
  </data>
  <data name="Condition Night" xml:space="preserve">
    <value>Condition Night</value>
  </data>
  <data name="DATE" xml:space="preserve">
    <value>DATE</value>
  </data>
  <data name="DAY CREW" xml:space="preserve">
    <value>DAY CREW</value>
  </data>
  <data name="DAY EQUIPMENT" xml:space="preserve">
    <value>DAY EQUIPMENT</value>
  </data>
  <data name="Dismantling Day" xml:space="preserve">
    <value>Dismantling Day</value>
  </data>
  <data name="Dismantling Night" xml:space="preserve">
    <value>Dismantling Night</value>
  </data>
  <data name="Drilling Day" xml:space="preserve">
    <value>Drilling Day</value>
  </data>
  <data name="Drilling Night" xml:space="preserve">
    <value>Drilling Night</value>
  </data>
  <data name="HOLE CODE" xml:space="preserve">
    <value>HOLE CODE</value>
  </data>
  <data name="HOLE DEPTH TO DAY" xml:space="preserve">
    <value>HOLE DEPTH TO DAY</value>
  </data>
  <data name="HOLE DEPTH TO NIGHT" xml:space="preserve">
    <value>HOLE DEPTH TO NIGHT</value>
  </data>
  <data name="Moving Rig Day" xml:space="preserve">
    <value>Moving Rig Day</value>
  </data>
  <data name="Moving Rig Night" xml:space="preserve">
    <value>Moving Rig Night</value>
  </data>
  <data name="NIGHT CREW" xml:space="preserve">
    <value>NIGHT CREW</value>
  </data>
  <data name="NIGHT EQUIPMENT" xml:space="preserve">
    <value>NIGHT EQUIPMENT</value>
  </data>
  <data name="Please enter hole code." xml:space="preserve">
    <value>Please enter hole code.</value>
  </data>
  <data name="Please enter the Date." xml:space="preserve">
    <value>Please enter the Date.</value>
  </data>
  <data name="Pre Start Day" xml:space="preserve">
    <value>Pre Start Day</value>
  </data>
  <data name="Pre Start Night" xml:space="preserve">
    <value>Pre Start Night</value>
  </data>
  <data name="Preparation Drilling Day" xml:space="preserve">
    <value>Preparation Drilling Day</value>
  </data>
  <data name="Preparation Drilling Night" xml:space="preserve">
    <value>Preparation Drilling Night</value>
  </data>
  <data name="Reaming Casing Day" xml:space="preserve">
    <value>Reaming Casing Day</value>
  </data>
  <data name="Reaming Casing Night" xml:space="preserve">
    <value>Reaming Casing Night</value>
  </data>
  <data name="Reaming Day" xml:space="preserve">
    <value>Reaming Day</value>
  </data>
  <data name="Reaming Night" xml:space="preserve">
    <value>Reaming Night</value>
  </data>
  <data name="Repairs Day" xml:space="preserve">
    <value>Repairs Day</value>
  </data>
  <data name="Repairs Night" xml:space="preserve">
    <value>Repairs Night</value>
  </data>
  <data name="SHELL DAY" xml:space="preserve">
    <value>SHELL DAY</value>
  </data>
  <data name="SHELL NIGHT" xml:space="preserve">
    <value>SHELL NIGHT</value>
  </data>
  <data name="Testing Day" xml:space="preserve">
    <value>Testing Day</value>
  </data>
  <data name="Testing Night" xml:space="preserve">
    <value>Testing Night</value>
  </data>
  <data name="USER EMAIL" xml:space="preserve">
    <value>USER EMAIL</value>
  </data>
  <data name="Water Delay Day" xml:space="preserve">
    <value>Water Delay Day</value>
  </data>
  <data name="Water Delay Night" xml:space="preserve">
    <value>Water Delay Night</value>
  </data>
  <data name="METERS DRILLED DAY" xml:space="preserve">
    <value>METERS DRILLED DAY</value>
  </data>
  <data name="METERS DRILLED NIGHT" xml:space="preserve">
    <value>METERS DRILLED NIGHT</value>
  </data>
</root>