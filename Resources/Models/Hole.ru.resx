<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACTUAL COORDINATE X" xml:space="preserve">
    <value>ФАКТИЧЕСКАЯ КООРДИНАТА X.</value>
  </data>
  <data name="ACTUAL COORDINATE Y" xml:space="preserve">
    <value>ФАКТИЧЕСКАЯ КООРДИНАТА Y.</value>
  </data>
  <data name="ACTUAL COORDINATE Z" xml:space="preserve">
    <value>ФАКТИЧЕСКАЯ КООРДИНАТА Z.</value>
  </data>
  <data name="AZIMUT" xml:space="preserve">
    <value>АЗИМУТ</value>
  </data>
  <data name="BENCH" xml:space="preserve">
    <value>УСТУП</value>
  </data>
  <data name="DIP" xml:space="preserve">
    <value>УГОЛ</value>
  </data>
  <data name="DRILL" xml:space="preserve">
    <value>БУРОВАЯ УСТАНОВКА</value>
  </data>
  <data name="DRILL PROGRAM" xml:space="preserve">
    <value>БУРОВАЯ ПРОГРАММА</value>
  </data>
  <data name="HOLE CODE" xml:space="preserve">
    <value>КОД СКВАЖИНА</value>
  </data>
  <data name="HOLE DEPTH" xml:space="preserve">
    <value>ГЛУБИНА СКВАЖИНА</value>
  </data>
  <data name="HOLE END DATE" xml:space="preserve">
    <value>ДАТА ЗАВЕРШЕНИЯ</value>
  </data>
  <data name="HOLE START DATE" xml:space="preserve">
    <value>ДАТА НАЧАЛА</value>
  </data>
  <data name="HOLE STATUS" xml:space="preserve">
    <value>СТАТУС СКВАЖИНА</value>
  </data>
  <data name="HOLE ZONE" xml:space="preserve">
    <value>РАЙОН УЧАСТКА</value>
  </data>
  <data name="Please enter actual coordinate x." xml:space="preserve">
    <value>Пожалуйста, введите фактическую координату х.</value>
  </data>
  <data name="Please enter actual coordinate y." xml:space="preserve">
    <value>Пожалуйста, введите фактическую координату y.</value>
  </data>
  <data name="Please enter actual coordinate z." xml:space="preserve">
    <value>Пожалуйста, введите фактическую координату z.</value>
  </data>
  <data name="Please enter azimut." xml:space="preserve">
    <value>Пожалуйста, введите азимут.</value>
  </data>
  <data name="Please enter bench." xml:space="preserve">
    <value>Пожалуйста, введите уступ.</value>
  </data>
  <data name="Please enter dip." xml:space="preserve">
    <value>Пожалуйста, введите угол.</value>
  </data>
  <data name="Please enter drill program." xml:space="preserve">
    <value>Пожалуйста, введите буровая программа.</value>
  </data>
  <data name="Please enter drill." xml:space="preserve">
    <value>Пожалуйста, введите буровая установка.</value>
  </data>
  <data name="Please enter hole code." xml:space="preserve">
    <value>Пожалуйста, введите код скважина</value>
  </data>
  <data name="Please enter hole depth." xml:space="preserve">
    <value>Пожалуйста, введите глубина скважина.</value>
  </data>
  <data name="Please enter hole start date." xml:space="preserve">
    <value>Пожалуйста, введите дату начало.</value>
  </data>
  <data name="Please enter hole status." xml:space="preserve">
    <value>Пожалуйста, введите статус скважина.</value>
  </data>
  <data name="Please enter hole zone." xml:space="preserve">
    <value>Пожалуйста, введите район участка.</value>
  </data>
  <data name="Please enter project code." xml:space="preserve">
    <value>Пожалуйста, введите код проекта.</value>
  </data>
  <data name="Please enter project coordinates x." xml:space="preserve">
    <value>Пожалуйста, введите координаты проекта х.</value>
  </data>
  <data name="Please enter project coordinates y." xml:space="preserve">
    <value>Пожалуйста, введите координаты проекта y.</value>
  </data>
  <data name="Please enter project coordinates z." xml:space="preserve">
    <value>Пожалуйста, введите координаты проекта z.</value>
  </data>
  <data name="Please enter section." xml:space="preserve">
    <value>Пожалуйста, введите секцию</value>
  </data>
  <data name="Please enter target." xml:space="preserve">
    <value>Пожалуйста, введите цель.</value>
  </data>
  <data name="PROJECT CODE" xml:space="preserve">
    <value>КОД ПРОЕКТА</value>
  </data>
  <data name="PROJECT COORDINATES X" xml:space="preserve">
    <value>КООРДИНАТЫ ПРОЕКТА X.</value>
  </data>
  <data name="PROJECT COORDINATES Y" xml:space="preserve">
    <value>КООРДИНАТЫ ПРОЕКТА Y.</value>
  </data>
  <data name="PROJECT COORDINATES Z" xml:space="preserve">
    <value>КООРДИНАТЫ ПРОЕКТА Z.</value>
  </data>
  <data name="PROJECT DEPTH" xml:space="preserve">
    <value>ПРОЕКТНАЯ ГЛУБИНА</value>
  </data>
  <data name="SECTION" xml:space="preserve">
    <value>СЕКЦИЯ</value>
  </data>
  <data name="TARGET" xml:space="preserve">
    <value>ЦЕЛЬ</value>
  </data>
  <data name="ZERO DATUM" xml:space="preserve">
    <value>НАЧАЛЬНАЯ ОТМЕТКА</value>
  </data>
</root>