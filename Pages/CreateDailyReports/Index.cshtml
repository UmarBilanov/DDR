@page
@model DiamondDrillingReport.Pages.CreateDailyReports.IndexModel
@using Microsoft.AspNetCore.Mvc.Localization
@using System
@inject IViewLocalizer Localizer
@{
    var CurrentQuery = Request.QueryString;
    string query = Convert.ToString(CurrentQuery);
    var result = "en";
    var VarQuery = query.Length;
    if (VarQuery != 0)
    {
        result = query.Substring(VarQuery - 2);
    }

}
@section Scripts
    {
    <script type="text/javascript">

        $(document).ready(function () {
            //var now = new Date();

            //var day = ("0" + now.getDate()).slice(-2);
            //var month = ("0" + (now.getMonth() + 1)).slice(-2);

            //var today = now.getFullYear() + "-" + (month) + "-" + (day);


            //$('#TodayDate').val(today);
        });

        $('a.QueryStringEdit').each(function () {
            var url = $(this).attr('href');
            if (url != "") {
                $(this).attr('href', $(this).attr('href') + "&" + window.location.search.substring(1));
            }
        });

        $('a.QueryStringDelete').each(function () {
            var url = $(this).attr('href');
            if (url != "") {
                $(this).attr('href', $(this).attr('href') + "&" + window.location.search.substring(1));
            }
        });

        $("#btnQueryStringBackToHomeIndex").bind("click", function () {
            var QueryStringLength = window.location.search.length;
            if (QueryStringLength >= 10) {
                var url = "/?" + window.location.search.substring(window.location.search.length - 10, window.location.search.length);
                window.location.href = url;
            } else {
                var url = "/";
                window.location.href = url;
            }
        });

        $("#dynamic_select").on('change', function () {
            var apiUrl = document.URL;
            var url = apiUrl + $(this).val(); // get selected value
            if (url) { // require a URL
                window.location = url; // redirect
            }
            return false;
        });
    </script>
}

<hr />
<div class="container">
    <div class="col-sm-9">
        <hr />
        <form asp-action="Index" method="get">
            <div class="col-sm-3">
                <input asp-for="RDateTime" value="DateTime.Now.ToString()" id="TodayDate" type="date" class="form-control" />
            </div>
            <div class="col-sm-3">
                <select asp-for="HoleString" asp-items="Model.Holes" class="form-control">
                    <option value="">@Localizer["ALL"]</option>
                </select>
            </div>
            <div class="col-sm-3">
                <button type="submit" value="" class="btn btn-block">@Localizer["FILTER"]</button>
            </div>
            @*<div class="col-sm-3">
                <button type="button" id="IndexFull" class="btn btn-block">@Localizer["All Transactions"]</button>
            </div>*@
        </form>
    </div>
    <div class="col-sm-3">
        <button type="button" id="btnQueryStringBackToHomeIndex" class="btn btn-block">@Localizer["BACK"]</button><br />
    </div>
    <br />
    <br />
    <br />
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].HoleID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].Hole.Drill.DrillCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].Hole.HoleDepth)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].HoleDepthToNight)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].MetersDrilledDay)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].MetersDrilledNight)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].CasingToNight)
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.CreateDailyReport[0].User)
                </th>*@
                <th>
                    @Localizer["COMMENT"]
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.CreateDailyReport)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hole.HoleCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hole.Drill.DrillCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hole.HoleDepth)
                </td>
                <td id="HoleDepthToNight">
                    @Html.DisplayFor(modelItem => item.HoleDepthToNight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MetersDrilledDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MetersDrilledNight)
                </td>
                <td id="CasingToNight">
                    @Html.DisplayFor(modelItem => item.CasingToNight)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.User)
                </td>*@
                <td>
                    @if (item.CommentDay != null)
                    {<strong>D/S</strong>
                        @Html.DisplayFor(modelItem => item.CommentDay)
                        ;
                    }
                    @if (item.CommentNight != null)
                    {<strong>N/S</strong>
                        @Html.DisplayFor(modelItem => item.CommentNight)
                        ;
                    }
                </td>
                <td>
                    <a class="QueryStringEdit" asp-page="./Edit" asp-route-id="@item.ID">@Localizer["Edit"]</a> | <a class="QueryStringDelete" asp-page="./Delete" asp-route-id="@item.ID">@Localizer["Delete"]</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
